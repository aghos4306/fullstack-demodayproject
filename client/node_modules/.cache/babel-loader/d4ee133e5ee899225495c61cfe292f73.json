{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\waec\\\\Documents\\\\GitHub\\\\fullstack-demodayproject\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), \" Welcome \", user && user.name), profile !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }, \"has\") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 56\n    }\n  }, \"has not\"));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProp, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/waec/Documents/GitHub/fullstack-demodayproject/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","user","profile","loading","name","propTypes","func","isRequired","object","mapStateToProp","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,iBAAT,QAAiC,uBAAjC;;AAGA,MAAMC,SAAS,GAAG,CAAC;AACfD,EAAAA,iBADe;AAEfE,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFS;AAGfC,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV;AAHM,CAAD,KAIX;AACHT,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,EAFM,CAAT;AAIF,SAAOK,OAAO,IAAID,OAAO,KAAK,IAAvB,gBACP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAED,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADE,eAEF;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAC0CD,IAAI,IAAIA,IAAI,CAACG,IADvD,CAFE,EAKCF,OAAO,KAAK,IAAZ,gBAAmB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAnB,gBAA8C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAL/C,CAFN;AAUD,CAnBD;;AAqBAH,SAAS,CAACM,SAAV,GAAsB;AAClBP,EAAAA,iBAAiB,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADhB;AAElBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD,UAFL;AAGlBL,EAAAA,OAAO,EAAEP,SAAS,CAACa,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,cAAc,GAAGC,KAAK,KAAI;AAC5BV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADgB;AAE5BE,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AAFa,CAAJ,CAA5B;;AAKA,eAAeN,OAAO,CAACa,cAAD,EAAiB;AAACX,EAAAA;AAAD,CAAjB,CAAP,CAA8CC,SAA9C,CAAf","sourcesContent":["import React, {Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getCurrentProfile} from '../../actions/profile';\r\n\r\n\r\nconst Dashboard = ({ \r\n    getCurrentProfile, \r\n    auth: { user }, \r\n    profile: {profile, loading }\r\n }) => {\r\n    useEffect(() =>{\r\n        getCurrentProfile();\r\n    }, []);\r\n    \r\n  return loading && profile === null ? (\r\n  <Spinner />\r\n  ) : ( <Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome { user && user.name}\r\n        </p>\r\n        {profile !== null ? <Fragment>has</Fragment> : <Fragment>has not</Fragment>}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProp = state =>({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProp, {getCurrentProfile })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}